#include<stdio.h>
#include<stdint.h>
void print_bit_16 (uint16_t nr)
{
  uint16_t mask = 0x8000; // 0b1000000000000000
  uint8_t i = 0;
  for (i = 0; i < 16; i++)
    {
      if ((nr & mask) == 0)
        {
          printf ("0");
        }
      else
        {
          printf ("1");
        }
      mask = mask >> 1; // mask >>= 1;
    }
  printf ("\n");
}
int concatenare(uint8_t a, uint8_t b)
{
    uint16_t c=0;
    c=c&a;
    c=c<<8;
    c=c|b;
    return c;
}

int main(void)
{
    print_bit_16(concatenare(0x12,0x11));
    return 0;
}
//
#include<stdio.h>
#include<stdint.h>
void print_bit_16 (uint64_t nr)
{
  uint64_t mask = 0x32000; // 0b1000000000000000
  uint8_t i = 0;
  for (i = 0; i < 64; i++)
    {
      if ((nr & mask) == 0)
        {
          printf ("0");
        }
      else
        {
          printf ("1");
        }
      mask = mask >> 1; // mask >>= 1;
    }
  printf ("\n");
}

void verif_paritate(uint64_t nr)
{
  uint64_t mask = 0x32000; // 0b1000000000000000
  uint8_t i = 0;
  uint8_t ap=1;
  for (i = 0; i < 64; i++)
    {
      if ((nr & mask) == 1)
        {
          ap++;
        }
      
      mask = mask >> 1; // mask >>= 1;
    }
  if(ap%2==0)
  {
      printf("True\n");
  }
  else
  {
      printf("False\n");
  }
}
//int main()
{
    verif_paritate(0x33);
    print_bit_16(0x33);
    return 0;
}